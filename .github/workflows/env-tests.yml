name: "Env tests"

on:
  push:
    branches:
      - "master"
      - "develop"
    paths:
      - "src/App1/**"
      - "src/App2/**"
      - ".github/workflows/env-tests.yml"

jobs:
  envjob:
    runs-on: ubuntu-latest
    outputs:
      AKS_CLUSTER_NAME: ${{ steps.out.outputs.AKS_CLUSTER_NAME }}
      AKS_CLUSTER_RESOURCE_GROUP: ${{ steps.out.outputs.AKS_CLUSTER_RESOURCE_GROUP }}
      BUILD_TYPE: ${{ steps.out.outputs.BUILD_TYPE }}
      MATRIX: ${{ steps.matrix.outputs.MATRIX }}
    steps:
      - name: PRINT
        env:
          EVENT: ${{ toJson(github.event) }}
        run: echo "$EVENT"
      - name: Checkout source
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2.2.0
        id: filter
        with:
          # inline YAML or path to separate file (e.g.: .github/filters.yaml)
          filters: |
            app1:
              - 'src/App1/**/*'
              - '.github/workflows/env-tests.yml'
            app2:
              - 'src/App2/**/*'
              - '.github/workflows/env-tests.yml'
      - name: Define matrix
        id: matrix
        run: |
          matrix="\"include\":["
          if [[ "${{ steps.filter.outputs.app1 }}" == "true" ]]; then
            matrix+="{\"basePath\": \"srcApp1/\", \"appName\":\"app1\"}"
          fi
          if [[ "${{ steps.filter.outputs.app2 }}" == "true" ]]; then
            matrix+="{\"basePath\": \"srcApp2/\", \"appName\":\"app2\"}"
          fi
          matrix+="]"
          echo ::set-output name=MATRIX::${matrix}
      - name: Set production build type
        if: endsWith(github.ref, '/master')
        run: echo "::set-env name=BUILD_TYPE::production"
      - name: Set staging build type
        if: endsWith(github.ref, '/develop')
        run: echo "::set-env name=BUILD_TYPE::staging"
      - name: Env variables
        uses: allenevans/set-env@v1.1.0
        with:
          AKS_CLUSTER_NAME: ${{ env.BUILD_TYPE }}
          AKS_CLUSTER_RESOURCE_GROUP: kubernetes-${{ env.BUILD_TYPE }}
      - name: PRINT
        run: echo ${{ github.ref }}
      - name: PRINT2
        run: echo $AKS_CLUSTER_RESOURCE_GROUP $AKS_CLUSTER_NAME
      - name: out
        id: out
        run: |
          echo "::set-output name=AKS_CLUSTER_NAME::$AKS_CLUSTER_NAME"
          echo "::set-output name=AKS_CLUSTER_RESOURCE_GROUP::${{ env.AKS_CLUSTER_RESOURCE_GROUP }}"
          echo "::set-output name=BUILD_TYPE::$BUILD_TYPE"

  build:
    needs: envjob
    strategy:
      matrix: ${{fromJson(needs.envjob.outputs.MATRIX)}}
    runs-on: ubuntu-latest
    steps:
      - name: PRINT 1
        run: echo ${{ github.ref }}
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - name: PRINT3
        run: echo ${{ needs.envjob.outputs.AKS_CLUSTER_RESOURCE_GROUP }} ${{ needs.envjob.outputs.BUILD_TYPE }}
      - name: PRINT 4
        env: 
          JOB_OUT: ${{ toJson(needs.envjob) }}
        run: echo "$JOB_OUT"

